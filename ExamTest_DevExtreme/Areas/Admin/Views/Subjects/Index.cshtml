@using Exam_Test.Models
<h2>Subject</h2>
<br /><br />
@(Html.DevExtreme().DataGrid<Exam_Test.Models.Subject>()

    .ID("gridContainer")
    .ShowBorders(true)
    .Paging(paging => paging.Enabled(false))
    .Editing(editing =>
    {
        editing.Mode(GridEditMode.Row);
        editing.AllowAdding(true);
        editing.AllowDeleting(true);
        editing.AllowUpdating(true);
    })
    .Columns(columns =>
    {
        columns.AddFor(m => m.name);

        //columns.AddFor(m => m.difficultyLevel);
        columns.AddFor(m => m.difficultyLevel)
                .Lookup(lookup => lookup
                    .DataSource(Html.GetEnumSelectList<SubjectDifficulty>()
                        .Select(l => new { Value = int.Parse(l.Value), Text = l.Text })
                    )
                    .ValueExpr("Value")
                    .DisplayExpr("Text")

                );



        //columns.AddFor(m => m.Exams)


        //columns.AddFor(m => m.StateID)
        //    .Width(125)
        //    .Lookup(lookup => lookup
        //        .DataSource(d => d.Mvc().Controller("DataGridStatesLookup").LoadAction("Get").Key("ID"))
        //        .DisplayExpr("Name")
        //        .ValueExpr("ID")
        //    );

    })
    .DataSource(d => d.Mvc()
        .Controller("Subjects")
        .LoadAction("GetSubjects")
        .UpdateAction("Put")
        .InsertAction("Post")
        .DeleteAction("Delete")
        .Key("subjectId")
    )
    .OnEditingStart(@<text> function(e) { logEvent("EditingStart"); } </text>)
.OnInitNewRow(@<text> function(e) { logEvent("InitNewRow"); } </text>)
.OnRowInserting(@<text> function(e) { logEvent("RowInserting"); } </text>)
.OnRowInserted(@<text> function(e) { logEvent("RowInserted"); } </text>)
.OnRowUpdating(@<text> function(e) { logEvent("RowUpdating"); } </text>)
.OnRowUpdated(@<text> function(e) { logEvent("RowUpdated"); } </text>)
.OnRowRemoving(@<text> function(e) { logEvent("RowRemoving"); } </text>)
.OnRowRemoved(@<text> function(e) { logEvent("RowRemoved"); } </text>)
)


<div id="events">
    <div>
        <div class="caption">
            Fired events
        </div>
        @(Html.DevExtreme().Button()
            .ID("clear")
            .Text("Clear")
            .OnClick(@<text> function() { $("#events ul").empty(); } </text>)
        )
    </div>
    <ul></ul>
</div>

<script>
    function logEvent(eventName) {
        var logList = $("#events ul"),
            newItem = $("<li>", { text: eventName });

        logList.prepend(newItem);
    }
</script>